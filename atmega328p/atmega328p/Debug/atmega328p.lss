
atmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c81  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e3  00000000  00000000  000011c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000058e  00000000  00000000  000019a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00001f34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000450  00000000  00000000  00001f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000747  00000000  00000000  000023ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002b33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 14 02 	jmp	0x428	; 0x428 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
    /* Replace with your application code */
	float anguloMotor=0;
	
	
	// Port init
	DDRD |= (1 << 7);
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	80 68       	ori	r24, 0x80	; 128
  84:	8a b9       	out	0x0a, r24	; 10
	DDRC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3);
  86:	87 b1       	in	r24, 0x07	; 7
  88:	8f 60       	ori	r24, 0x0F	; 15
  8a:	87 b9       	out	0x07, r24	; 7
#include <util/delay.h>

int main(void)
{
    /* Replace with your application code */
	float anguloMotor=0;
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	cb 01       	movw	r24, r22
	DDRC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3);
	
    while (1) 
    {
		 //TODO:: Please write your application code
		 for(int i=0;i<512;i++){
  92:	c0 e0       	ldi	r28, 0x00	; 0
  94:	d0 e0       	ldi	r29, 0x00	; 0
  96:	03 c0       	rjmp	.+6      	; 0x9e <main+0x1e>
			 //SE LLAMA LA FUNCION ULTRASONIDO
			 
			 
			 // Measuring distance
			 			 
			 anguloMotor= driveStepperOclock(anguloMotor); //se mueve el motor 22.5 angulo
  98:	0e 94 74 00 	call	0xe8	; 0xe8 <driveStepperOclock>
	DDRC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3);
	
    while (1) 
    {
		 //TODO:: Please write your application code
		 for(int i=0;i<512;i++){
  9c:	21 96       	adiw	r28, 0x01	; 1
  9e:	c1 15       	cp	r28, r1
  a0:	22 e0       	ldi	r18, 0x02	; 2
  a2:	d2 07       	cpc	r29, r18
  a4:	cc f3       	brlt	.-14     	; 0x98 <main+0x18>
			 
			 // Measuring distance
			 			 
			 anguloMotor= driveStepperOclock(anguloMotor); //se mueve el motor 22.5 angulo
		 }
		 PORTC = 0x09;		/* Last step to initial position */
  a6:	29 e0       	ldi	r18, 0x09	; 9
  a8:	28 b9       	out	0x08, r18	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	3f ef       	ldi	r19, 0xFF	; 255
  ac:	49 e6       	ldi	r20, 0x69	; 105
  ae:	28 e1       	ldi	r18, 0x18	; 24
  b0:	31 50       	subi	r19, 0x01	; 1
  b2:	40 40       	sbci	r20, 0x00	; 0
  b4:	20 40       	sbci	r18, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x30>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x3a>
  ba:	00 00       	nop
		 _delay_ms(1000);
		 for(int i=0;i<512;i++){
  bc:	c0 e0       	ldi	r28, 0x00	; 0
  be:	d0 e0       	ldi	r29, 0x00	; 0
  c0:	03 c0       	rjmp	.+6      	; 0xc8 <main+0x48>
			 //SE LLAMA LA FUNCION ULTRASONIDO
			 
			 
			 // Measuring distance
			 
			 anguloMotor= driveStepperAnticlock(anguloMotor); //se mueve el motor 22.5 angulo
  c2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <driveStepperAnticlock>
			 			 
			 anguloMotor= driveStepperOclock(anguloMotor); //se mueve el motor 22.5 angulo
		 }
		 PORTC = 0x09;		/* Last step to initial position */
		 _delay_ms(1000);
		 for(int i=0;i<512;i++){
  c6:	21 96       	adiw	r28, 0x01	; 1
  c8:	c1 15       	cp	r28, r1
  ca:	32 e0       	ldi	r19, 0x02	; 2
  cc:	d3 07       	cpc	r29, r19
  ce:	cc f3       	brlt	.-14     	; 0xc2 <main+0x42>
			 
			 // Measuring distance
			 
			 anguloMotor= driveStepperAnticlock(anguloMotor); //se mueve el motor 22.5 angulo
		 }
		 PORTC = 0x09;		/* Last step to initial position */
  d0:	29 e0       	ldi	r18, 0x09	; 9
  d2:	28 b9       	out	0x08, r18	; 8
  d4:	4f ef       	ldi	r20, 0xFF	; 255
  d6:	29 e6       	ldi	r18, 0x69	; 105
  d8:	38 e1       	ldi	r19, 0x18	; 24
  da:	41 50       	subi	r20, 0x01	; 1
  dc:	20 40       	sbci	r18, 0x00	; 0
  de:	30 40       	sbci	r19, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x5a>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
  e6:	d5 cf       	rjmp	.-86     	; 0x92 <main+0x12>

000000e8 <driveStepperOclock>:
}

////////////////////////////////////////////////////
float driveStepperOclock(float anguloMotor)
{
	PORTC = 0x09;
  e8:	29 e0       	ldi	r18, 0x09	; 9
  ea:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
  ec:	20 e0       	ldi	r18, 0x00	; 0
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	44 e3       	ldi	r20, 0x34	; 52
  f2:	50 e4       	ldi	r21, 0x40	; 64
  f4:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
  f8:	ef e1       	ldi	r30, 0x1F	; 31
  fa:	fe e4       	ldi	r31, 0x4E	; 78
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <driveStepperOclock+0x14>
 100:	00 c0       	rjmp	.+0      	; 0x102 <driveStepperOclock+0x1a>
 102:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x08;
 104:	28 e0       	ldi	r18, 0x08	; 8
 106:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	44 e3       	ldi	r20, 0x34	; 52
 10e:	50 e4       	ldi	r21, 0x40	; 64
 110:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 114:	ef e1       	ldi	r30, 0x1F	; 31
 116:	fe e4       	ldi	r31, 0x4E	; 78
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <driveStepperOclock+0x30>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <driveStepperOclock+0x36>
 11e:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x0C;
 120:	2c e0       	ldi	r18, 0x0C	; 12
 122:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	44 e3       	ldi	r20, 0x34	; 52
 12a:	50 e4       	ldi	r21, 0x40	; 64
 12c:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 130:	ef e1       	ldi	r30, 0x1F	; 31
 132:	fe e4       	ldi	r31, 0x4E	; 78
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <driveStepperOclock+0x4c>
 138:	00 c0       	rjmp	.+0      	; 0x13a <driveStepperOclock+0x52>
 13a:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x04;
 13c:	24 e0       	ldi	r18, 0x04	; 4
 13e:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	44 e3       	ldi	r20, 0x34	; 52
 146:	50 e4       	ldi	r21, 0x40	; 64
 148:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 14c:	ef e1       	ldi	r30, 0x1F	; 31
 14e:	fe e4       	ldi	r31, 0x4E	; 78
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <driveStepperOclock+0x68>
 154:	00 c0       	rjmp	.+0      	; 0x156 <driveStepperOclock+0x6e>
 156:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x06;
 158:	26 e0       	ldi	r18, 0x06	; 6
 15a:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 15c:	20 e0       	ldi	r18, 0x00	; 0
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	44 e3       	ldi	r20, 0x34	; 52
 162:	50 e4       	ldi	r21, 0x40	; 64
 164:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 168:	ef e1       	ldi	r30, 0x1F	; 31
 16a:	fe e4       	ldi	r31, 0x4E	; 78
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <driveStepperOclock+0x84>
 170:	00 c0       	rjmp	.+0      	; 0x172 <driveStepperOclock+0x8a>
 172:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x02;
 174:	22 e0       	ldi	r18, 0x02	; 2
 176:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	44 e3       	ldi	r20, 0x34	; 52
 17e:	50 e4       	ldi	r21, 0x40	; 64
 180:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 184:	ef e1       	ldi	r30, 0x1F	; 31
 186:	fe e4       	ldi	r31, 0x4E	; 78
 188:	31 97       	sbiw	r30, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <driveStepperOclock+0xa0>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <driveStepperOclock+0xa6>
 18e:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x03;
 190:	23 e0       	ldi	r18, 0x03	; 3
 192:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	44 e3       	ldi	r20, 0x34	; 52
 19a:	50 e4       	ldi	r21, 0x40	; 64
 19c:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 1a0:	ef e1       	ldi	r30, 0x1F	; 31
 1a2:	fe e4       	ldi	r31, 0x4E	; 78
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <driveStepperOclock+0xbc>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <driveStepperOclock+0xc2>
 1aa:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x01;
 1ac:	21 e0       	ldi	r18, 0x01	; 1
 1ae:	28 b9       	out	0x08, r18	; 8
	anguloMotor +=2.8125;
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	44 e3       	ldi	r20, 0x34	; 52
 1b6:	50 e4       	ldi	r21, 0x40	; 64
 1b8:	0e 94 57 01 	call	0x2ae	; 0x2ae <__addsf3>
 1bc:	ef e1       	ldi	r30, 0x1F	; 31
 1be:	fe e4       	ldi	r31, 0x4E	; 78
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <driveStepperOclock+0xd8>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <driveStepperOclock+0xde>
 1c6:	00 00       	nop
	
	/* Rotate Stepper Motor Anticlockwise with half step sequence */
	
	return anguloMotor;
	
}
 1c8:	08 95       	ret

000001ca <driveStepperAnticlock>:

float driveStepperAnticlock(float anguloMotor){

	PORTC = 0x09;
 1ca:	29 e0       	ldi	r18, 0x09	; 9
 1cc:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	44 e3       	ldi	r20, 0x34	; 52
 1d4:	50 e4       	ldi	r21, 0x40	; 64
 1d6:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 1da:	ef e1       	ldi	r30, 0x1F	; 31
 1dc:	fe e4       	ldi	r31, 0x4E	; 78
 1de:	31 97       	sbiw	r30, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <driveStepperAnticlock+0x14>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <driveStepperAnticlock+0x1a>
 1e4:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x01;
 1e6:	21 e0       	ldi	r18, 0x01	; 1
 1e8:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	44 e3       	ldi	r20, 0x34	; 52
 1f0:	50 e4       	ldi	r21, 0x40	; 64
 1f2:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 1f6:	ef e1       	ldi	r30, 0x1F	; 31
 1f8:	fe e4       	ldi	r31, 0x4E	; 78
 1fa:	31 97       	sbiw	r30, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <driveStepperAnticlock+0x30>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <driveStepperAnticlock+0x36>
 200:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x03;
 202:	23 e0       	ldi	r18, 0x03	; 3
 204:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	44 e3       	ldi	r20, 0x34	; 52
 20c:	50 e4       	ldi	r21, 0x40	; 64
 20e:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 212:	ef e1       	ldi	r30, 0x1F	; 31
 214:	fe e4       	ldi	r31, 0x4E	; 78
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <driveStepperAnticlock+0x4c>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <driveStepperAnticlock+0x52>
 21c:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x02;
 21e:	22 e0       	ldi	r18, 0x02	; 2
 220:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	44 e3       	ldi	r20, 0x34	; 52
 228:	50 e4       	ldi	r21, 0x40	; 64
 22a:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 22e:	ef e1       	ldi	r30, 0x1F	; 31
 230:	fe e4       	ldi	r31, 0x4E	; 78
 232:	31 97       	sbiw	r30, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <driveStepperAnticlock+0x68>
 236:	00 c0       	rjmp	.+0      	; 0x238 <driveStepperAnticlock+0x6e>
 238:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x06;
 23a:	26 e0       	ldi	r18, 0x06	; 6
 23c:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	44 e3       	ldi	r20, 0x34	; 52
 244:	50 e4       	ldi	r21, 0x40	; 64
 246:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 24a:	ef e1       	ldi	r30, 0x1F	; 31
 24c:	fe e4       	ldi	r31, 0x4E	; 78
 24e:	31 97       	sbiw	r30, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <driveStepperAnticlock+0x84>
 252:	00 c0       	rjmp	.+0      	; 0x254 <driveStepperAnticlock+0x8a>
 254:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x04;
 256:	24 e0       	ldi	r18, 0x04	; 4
 258:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	44 e3       	ldi	r20, 0x34	; 52
 260:	50 e4       	ldi	r21, 0x40	; 64
 262:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 266:	ef e1       	ldi	r30, 0x1F	; 31
 268:	fe e4       	ldi	r31, 0x4E	; 78
 26a:	31 97       	sbiw	r30, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <driveStepperAnticlock+0xa0>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <driveStepperAnticlock+0xa6>
 270:	00 00       	nop
	_delay_ms(PERIOD);
	
	PORTC = 0x0C;
 272:	2c e0       	ldi	r18, 0x0C	; 12
 274:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 276:	20 e0       	ldi	r18, 0x00	; 0
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	44 e3       	ldi	r20, 0x34	; 52
 27c:	50 e4       	ldi	r21, 0x40	; 64
 27e:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 282:	ef e1       	ldi	r30, 0x1F	; 31
 284:	fe e4       	ldi	r31, 0x4E	; 78
 286:	31 97       	sbiw	r30, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <driveStepperAnticlock+0xbc>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <driveStepperAnticlock+0xc2>
 28c:	00 00       	nop
	_delay_ms(PERIOD);

	PORTC = 0x08;
 28e:	28 e0       	ldi	r18, 0x08	; 8
 290:	28 b9       	out	0x08, r18	; 8
	anguloMotor -=2.8125;
 292:	20 e0       	ldi	r18, 0x00	; 0
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	44 e3       	ldi	r20, 0x34	; 52
 298:	50 e4       	ldi	r21, 0x40	; 64
 29a:	0e 94 56 01 	call	0x2ac	; 0x2ac <__subsf3>
 29e:	ef e1       	ldi	r30, 0x1F	; 31
 2a0:	fe e4       	ldi	r31, 0x4E	; 78
 2a2:	31 97       	sbiw	r30, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <driveStepperAnticlock+0xd8>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <driveStepperAnticlock+0xde>
 2a8:	00 00       	nop
	_delay_ms(PERIOD);

	return anguloMotor;
 2aa:	08 95       	ret

000002ac <__subsf3>:
 2ac:	50 58       	subi	r21, 0x80	; 128

000002ae <__addsf3>:
 2ae:	bb 27       	eor	r27, r27
 2b0:	aa 27       	eor	r26, r26
 2b2:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__addsf3x>
 2b6:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_round>
 2ba:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_pscA>
 2be:	38 f0       	brcs	.+14     	; 0x2ce <__addsf3+0x20>
 2c0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_pscB>
 2c4:	20 f0       	brcs	.+8      	; 0x2ce <__addsf3+0x20>
 2c6:	39 f4       	brne	.+14     	; 0x2d6 <__addsf3+0x28>
 2c8:	9f 3f       	cpi	r25, 0xFF	; 255
 2ca:	19 f4       	brne	.+6      	; 0x2d2 <__addsf3+0x24>
 2cc:	26 f4       	brtc	.+8      	; 0x2d6 <__addsf3+0x28>
 2ce:	0c 94 c9 01 	jmp	0x392	; 0x392 <__fp_nan>
 2d2:	0e f4       	brtc	.+2      	; 0x2d6 <__addsf3+0x28>
 2d4:	e0 95       	com	r30
 2d6:	e7 fb       	bst	r30, 7
 2d8:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_inf>

000002dc <__addsf3x>:
 2dc:	e9 2f       	mov	r30, r25
 2de:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_split3>
 2e2:	58 f3       	brcs	.-42     	; 0x2ba <__addsf3+0xc>
 2e4:	ba 17       	cp	r27, r26
 2e6:	62 07       	cpc	r22, r18
 2e8:	73 07       	cpc	r23, r19
 2ea:	84 07       	cpc	r24, r20
 2ec:	95 07       	cpc	r25, r21
 2ee:	20 f0       	brcs	.+8      	; 0x2f8 <__addsf3x+0x1c>
 2f0:	79 f4       	brne	.+30     	; 0x310 <__addsf3x+0x34>
 2f2:	a6 f5       	brtc	.+104    	; 0x35c <__addsf3x+0x80>
 2f4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_zero>
 2f8:	0e f4       	brtc	.+2      	; 0x2fc <__addsf3x+0x20>
 2fa:	e0 95       	com	r30
 2fc:	0b 2e       	mov	r0, r27
 2fe:	ba 2f       	mov	r27, r26
 300:	a0 2d       	mov	r26, r0
 302:	0b 01       	movw	r0, r22
 304:	b9 01       	movw	r22, r18
 306:	90 01       	movw	r18, r0
 308:	0c 01       	movw	r0, r24
 30a:	ca 01       	movw	r24, r20
 30c:	a0 01       	movw	r20, r0
 30e:	11 24       	eor	r1, r1
 310:	ff 27       	eor	r31, r31
 312:	59 1b       	sub	r21, r25
 314:	99 f0       	breq	.+38     	; 0x33c <__addsf3x+0x60>
 316:	59 3f       	cpi	r21, 0xF9	; 249
 318:	50 f4       	brcc	.+20     	; 0x32e <__addsf3x+0x52>
 31a:	50 3e       	cpi	r21, 0xE0	; 224
 31c:	68 f1       	brcs	.+90     	; 0x378 <__addsf3x+0x9c>
 31e:	1a 16       	cp	r1, r26
 320:	f0 40       	sbci	r31, 0x00	; 0
 322:	a2 2f       	mov	r26, r18
 324:	23 2f       	mov	r18, r19
 326:	34 2f       	mov	r19, r20
 328:	44 27       	eor	r20, r20
 32a:	58 5f       	subi	r21, 0xF8	; 248
 32c:	f3 cf       	rjmp	.-26     	; 0x314 <__addsf3x+0x38>
 32e:	46 95       	lsr	r20
 330:	37 95       	ror	r19
 332:	27 95       	ror	r18
 334:	a7 95       	ror	r26
 336:	f0 40       	sbci	r31, 0x00	; 0
 338:	53 95       	inc	r21
 33a:	c9 f7       	brne	.-14     	; 0x32e <__addsf3x+0x52>
 33c:	7e f4       	brtc	.+30     	; 0x35c <__addsf3x+0x80>
 33e:	1f 16       	cp	r1, r31
 340:	ba 0b       	sbc	r27, r26
 342:	62 0b       	sbc	r22, r18
 344:	73 0b       	sbc	r23, r19
 346:	84 0b       	sbc	r24, r20
 348:	ba f0       	brmi	.+46     	; 0x378 <__addsf3x+0x9c>
 34a:	91 50       	subi	r25, 0x01	; 1
 34c:	a1 f0       	breq	.+40     	; 0x376 <__addsf3x+0x9a>
 34e:	ff 0f       	add	r31, r31
 350:	bb 1f       	adc	r27, r27
 352:	66 1f       	adc	r22, r22
 354:	77 1f       	adc	r23, r23
 356:	88 1f       	adc	r24, r24
 358:	c2 f7       	brpl	.-16     	; 0x34a <__addsf3x+0x6e>
 35a:	0e c0       	rjmp	.+28     	; 0x378 <__addsf3x+0x9c>
 35c:	ba 0f       	add	r27, r26
 35e:	62 1f       	adc	r22, r18
 360:	73 1f       	adc	r23, r19
 362:	84 1f       	adc	r24, r20
 364:	48 f4       	brcc	.+18     	; 0x378 <__addsf3x+0x9c>
 366:	87 95       	ror	r24
 368:	77 95       	ror	r23
 36a:	67 95       	ror	r22
 36c:	b7 95       	ror	r27
 36e:	f7 95       	ror	r31
 370:	9e 3f       	cpi	r25, 0xFE	; 254
 372:	08 f0       	brcs	.+2      	; 0x376 <__addsf3x+0x9a>
 374:	b0 cf       	rjmp	.-160    	; 0x2d6 <__addsf3+0x28>
 376:	93 95       	inc	r25
 378:	88 0f       	add	r24, r24
 37a:	08 f0       	brcs	.+2      	; 0x37e <__addsf3x+0xa2>
 37c:	99 27       	eor	r25, r25
 37e:	ee 0f       	add	r30, r30
 380:	97 95       	ror	r25
 382:	87 95       	ror	r24
 384:	08 95       	ret

00000386 <__fp_inf>:
 386:	97 f9       	bld	r25, 7
 388:	9f 67       	ori	r25, 0x7F	; 127
 38a:	80 e8       	ldi	r24, 0x80	; 128
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	08 95       	ret

00000392 <__fp_nan>:
 392:	9f ef       	ldi	r25, 0xFF	; 255
 394:	80 ec       	ldi	r24, 0xC0	; 192
 396:	08 95       	ret

00000398 <__fp_pscA>:
 398:	00 24       	eor	r0, r0
 39a:	0a 94       	dec	r0
 39c:	16 16       	cp	r1, r22
 39e:	17 06       	cpc	r1, r23
 3a0:	18 06       	cpc	r1, r24
 3a2:	09 06       	cpc	r0, r25
 3a4:	08 95       	ret

000003a6 <__fp_pscB>:
 3a6:	00 24       	eor	r0, r0
 3a8:	0a 94       	dec	r0
 3aa:	12 16       	cp	r1, r18
 3ac:	13 06       	cpc	r1, r19
 3ae:	14 06       	cpc	r1, r20
 3b0:	05 06       	cpc	r0, r21
 3b2:	08 95       	ret

000003b4 <__fp_round>:
 3b4:	09 2e       	mov	r0, r25
 3b6:	03 94       	inc	r0
 3b8:	00 0c       	add	r0, r0
 3ba:	11 f4       	brne	.+4      	; 0x3c0 <__fp_round+0xc>
 3bc:	88 23       	and	r24, r24
 3be:	52 f0       	brmi	.+20     	; 0x3d4 <__fp_round+0x20>
 3c0:	bb 0f       	add	r27, r27
 3c2:	40 f4       	brcc	.+16     	; 0x3d4 <__fp_round+0x20>
 3c4:	bf 2b       	or	r27, r31
 3c6:	11 f4       	brne	.+4      	; 0x3cc <__fp_round+0x18>
 3c8:	60 ff       	sbrs	r22, 0
 3ca:	04 c0       	rjmp	.+8      	; 0x3d4 <__fp_round+0x20>
 3cc:	6f 5f       	subi	r22, 0xFF	; 255
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255
 3d4:	08 95       	ret

000003d6 <__fp_split3>:
 3d6:	57 fd       	sbrc	r21, 7
 3d8:	90 58       	subi	r25, 0x80	; 128
 3da:	44 0f       	add	r20, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	59 f0       	breq	.+22     	; 0x3f6 <__fp_splitA+0x10>
 3e0:	5f 3f       	cpi	r21, 0xFF	; 255
 3e2:	71 f0       	breq	.+28     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3e4:	47 95       	ror	r20

000003e6 <__fp_splitA>:
 3e6:	88 0f       	add	r24, r24
 3e8:	97 fb       	bst	r25, 7
 3ea:	99 1f       	adc	r25, r25
 3ec:	61 f0       	breq	.+24     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3ee:	9f 3f       	cpi	r25, 0xFF	; 255
 3f0:	79 f0       	breq	.+30     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3f2:	87 95       	ror	r24
 3f4:	08 95       	ret
 3f6:	12 16       	cp	r1, r18
 3f8:	13 06       	cpc	r1, r19
 3fa:	14 06       	cpc	r1, r20
 3fc:	55 1f       	adc	r21, r21
 3fe:	f2 cf       	rjmp	.-28     	; 0x3e4 <__fp_split3+0xe>
 400:	46 95       	lsr	r20
 402:	f1 df       	rcall	.-30     	; 0x3e6 <__fp_splitA>
 404:	08 c0       	rjmp	.+16     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 406:	16 16       	cp	r1, r22
 408:	17 06       	cpc	r1, r23
 40a:	18 06       	cpc	r1, r24
 40c:	99 1f       	adc	r25, r25
 40e:	f1 cf       	rjmp	.-30     	; 0x3f2 <__fp_splitA+0xc>
 410:	86 95       	lsr	r24
 412:	71 05       	cpc	r23, r1
 414:	61 05       	cpc	r22, r1
 416:	08 94       	sec
 418:	08 95       	ret

0000041a <__fp_zero>:
 41a:	e8 94       	clt

0000041c <__fp_szero>:
 41c:	bb 27       	eor	r27, r27
 41e:	66 27       	eor	r22, r22
 420:	77 27       	eor	r23, r23
 422:	cb 01       	movw	r24, r22
 424:	97 f9       	bld	r25, 7
 426:	08 95       	ret

00000428 <_exit>:
 428:	f8 94       	cli

0000042a <__stop_program>:
 42a:	ff cf       	rjmp	.-2      	; 0x42a <__stop_program>
